#1. Подсчитать, сколько было выделено памяти под переменные в программах, разработанных
#на первых трех уроках.

#8.ДЗ_3. Матрица 5x4 заполняется вводом с клавиатуры, кроме последних элементов строк.
#  Программа должна вычислять сумму введенных элементов каждой строки и записывать ее
#  в ее последнюю ячейку. В конце следует вывести полученную матрицу.

import random
import sys
user_interaction = True
if not user_interaction:
  print("\nВведите матрицу 5х4 из целых чисел, т.е. 4 раза по 5 чисел. ")
  print("В конце ввода каждой строки из 5 чисел будет автоматически добавляться '0'. Не обращайте внмания!")
  print("Если вообще не хотите вводить числа, введите 'S' вместо первого числа")
  print("тогда матрица будет создана автоматически. И так начинаем:")
  answer = input("Введите первое число или 'S': ")
else:
    answer = 's'

matrix = [[], [], [], []]
columns_numb = 5
rows_numb = 4
if answer.lower() == 's':
    for j in range(0, rows_numb):
        for i in range(0, columns_numb):
            matrix[j].append(random.randint(1,20))
        else:
            matrix[j].append(0)
else:
    for j in range(0, rows_numb):
        for i in range(0, columns_numb):
            matrix[j].append(int(answer))
            answer = input("Введите следующее число: ")
        else:
            matrix[j].append(0)

for j in range(0, rows_numb):
    for i in range(0, columns_numb):
        matrix[j][columns_numb] += matrix[j][i]
if not user_interaction:
  print("\nВывод матрицы 5х4, последний 6й элемент каждой строки")
  print(" - сумма всех элеменов данной строки матрицы:\n")
  for j in range(0, rows_numb):
      for i in range(0, columns_numb):
          print(' |{: >3d} '.format(matrix[j][i]), end = '')
      print (' | {: >3d} |'.format(matrix[j][columns_numb]), end = '')
      print ('')
#=======================================================================

if __name__ == "__main__":
    def show_size(x, level=0):
        print('\t'*level,  'type = {:s}'.format(x.__class__), 'size = {:d}'.format(sys.getsizeof(x)), 'object = ', x)
        if hasattr(x, '__iter__'):
            if hasattr(x, 'items'):
                for y in x.items():
                    show_size(y, level+1)

            elif not isinstance(x, str):
                for y in x:
                    show_size(y, level+1)


    print(show_size([[], [], []])) #первоначальный размер матрицы
    print(show_size(matrix)) #окончательный размер матрицы
    #сумма строк взаимодействия с пользователем
    print (show_size("\n\nВведите матрицу 5х4 из целых чисел, т.е. 4 раза по 5 чисел. " \
                     "В конце ввода каждой строки из 5 чисел будет автоматически добавляться '0'. " \
                     "Не обращайте внмания! Если вообще не хотите вводить числа, введите 'S' " \
                     "вместо первого числа тогда матрица будет создана автоматически. И так начинаем: " \
                     "Введите первое число или 'S':  Вывод матрицы 5х4, последний 6й элемент " \
                     "каждой строки  - сумма всех элеменов данной строки матрицы:\n"))
#==============================================================================
#Изначально под матрицу 5х4 резурвируется 48 байт
#после добавления в эту матрицу 20 элементов ее размер увеличивается до 52 байт
#очень большой объем занимают строки взаимодействия с пользователем около 870 байт
#можно предположить, что на этом фоне память, занимаемая переменными программы,
#врядли окажется сколь-нибудь существенной
#и того в конечном итоге программа расходовала около 1000 байт памяти