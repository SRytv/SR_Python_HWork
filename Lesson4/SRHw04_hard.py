# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:
matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]
          
# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

#====================================================================

res = list(zip(*matrix))
#print( res )
#res: [(1, 3, 0), (0, 4, 4), (8, 1, 2)]

#====================================================================

# Задание-2:
# Найдите наибольшее произведение пяти последовательных цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

#=============================================================
"""
number = "73167176531330624919225119674426574742355349194934"\
"96983520312345607326239578318016984801869478851843"\
"85861560789112949495459501737958331952853208805511"\
"12540698747158523863050715693290963295227443043557"\
"66896648950445244523161731856403098711121722383113"\
"62229893423380308135336276614282806444486645238749"\
"30358907296290491560440772390713810515859307960866"\
"70172427121883998797908792274921901699720888093776"\
"65727333001053367881220235421809751254540594752243"\
"52584907711670556013604839586446706324415722155397"\
"53697817977846174064955149290862569321978468622482"\
"83972241375657056057490261407972968652414535100474"\
"82166370484403199890008895243450658541227588666881"\
"16427171479924442928230863465674813919123162824586"\
"17866458359124566529476545682848912883142607690042"\
"24219022671055626321111109370544217506941658960408"\
"07198403850962455444362981230987879927244284909188"\
"84580156166097919133875499200524063689912560717606"\
"05886116467109405077541002256983155200055935729725"\
"71636269561882670428252483600823257530420752963450"
"""
import re

for i in range(1,6):
    pattrn_str = str(i) + str(i+1) + str(i+2) + str(i+3) + str(i+4)
    #print (pattrn_str)
    result = pattern.search(number)
    print (type(result))
    result_str = result.group()
    start_at = result.start()
    print(result_str, start_at, "print-0")
    multipl = 1
    for j in range(0, len(result_str)):
        print (i, multipl, int(result_str[j]), "print-1")
        multipl = multipl * int(result_str[j])
    print (result_str, start_at, "print-2")
"""
#в исходном числе данный скрипт ничего не находит
#после добавлении во 2-й строке с 10й позиции числа '1234560'
#находит 2 паттерна и вычисляет их произведения, однако найти максимальное не получается
#как только очередной поиск оканчивается неудачей внешний цикл заканчивается с ошибкой:
#""ttributeError: 'NoneType' object has no attribute 'group'"" Попытки "нейтрализовать ее с помощью
проверок if (result != None) или if (type(result) == '_sre.SRE_Match') к успеху не привели...
#=============================================================

# Задание-3 (Ферзи):
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били
# друг друга. Вам дана расстановка 8 ферзей на доске.
# Определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел,
# каждое число от 1 до 8 — координаты 8 ферзей.
# Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.

#=============================================================

queens_set1 = [(1,2), (2,4), (3,6), (4,8),(5,3), (6,1), (7,7), (8,5),] # good set
#queens_set1 = [(1,2), (2,4), (3,3), (4,8),(5,3), (6,1), (7,7), (8,5),] # bad set
#queens_set2 = [(1,3), (2,8), (3,4), (4,7),(5,1), (6,6), (7,2), (8,5),] #good set
result = "NO" # ферзи на доске не бьют друг друга
for i in range(len(queens_set1)):
    curr_queen = queens_set1[i]
    #print (curr_queen)
    for j in range(i+1, len(queens_set1)):
        curr_queen
        tested_queen = queens_set1[j]
        if curr_queen[0] == tested_queen[0] or curr_queen[1] == tested_queen[1]:
            result = "YES" #эти ферзи находятся на одной горизонтале или вертикале
        elif abs(curr_queen[0]-tested_queen[0]) == abs(curr_queen[1]-tested_queen[1]):
            result = "YES" #эти ферзи находятся на одной диагонали
print (result)

#=============================================================
